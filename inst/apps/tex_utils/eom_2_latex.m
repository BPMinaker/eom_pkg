function s=eom_2_latex(syst,verbose)

if(size(syst.eom.mass.mtx,1)>50)
  verbose=0;
  disp('Large system.  Dropping verbose...');
end

s='';

	s=['The equations of motion are of the form\n' ...
	'\\[\n' ...
	'\\begin{bmatrix}\n' ...
	'{\\mathbf I} & {\\bm 0} & {\\bm 0} \\\\ {\\bm 0} & {\\mathbf M} & -{\\mathbf G} \\\\ {\\bm 0} & {\\bm 0} & {\\bm 0}\n' ...
	'\\end{bmatrix}\n' ...
	'\\begin{Bmatrix}\n' ...
	'\\dot{\\bm p}\\\\ \\dot{\\bm w} \\\\ \\dot{\\bm u}\n' ...
	'\\end{Bmatrix}\n' ...
	'+\\begin{bmatrix}\n' ...
	'{\\mathbf V} & -{\\mathbf I} & {\\bm 0} \\\\ {\\mathbf K} & {\\mathbf L} & -{\\mathbf F} \\\\ {\\bm 0} & {\\bm 0} & {\\mathbf I}\n' ...
	'\\end{bmatrix}\n' ...
	'\\begin{Bmatrix}\n' ...
	'{\\bm p}\\\\ {\\bm w}\\\\ {\\bm u}\n' ...
	'\\end{Bmatrix}\n' ...
	'=\\begin{bmatrix}\n' ...
	'{\\bm 0}\\\\ {\\bm 0}\\\\ {\\mathbf I}\n' ...
	'\\end{bmatrix}\n' ...
	'\\begin{Bmatrix}\n' ...
	'{\\bm u}\n' ...
	'\\end{Bmatrix}\n' ...
	'\\]\n' ...
	'The system is subject to constraints\n' ...
	'\\[\n' ...
	'\\begin{bmatrix}\n' ...
	'\\mathbf{J}_\\textrm{h} & {\\bm 0} & {\\bm 0}\\\\-{\\mathbf J}_\\textrm{h}{\\mathbf V} & {\\mathbf J}_\\textrm{h} & {\\bm 0}\\\\ {\\bm 0} & {\\mathbf J}_\\textrm{nh} & {\\bm 0}\n' ...
	'\\end{bmatrix}\n' ...
	'\\begin{bmatrix}\n' ...
	'\\dot{\\bm p} & {\\bm p} \\\\ \\dot{\\bm w} & {\\bm w} \\\\ \\dot{\\bm u} & {\\bm u}\n' ...
	'\\end{bmatrix}\n' ...
	'=\\begin{bmatrix}\n' ...
	'{\\bm 0} & {\\bm 0}\\\\{\\bm 0} & {\\bm 0}\\\\{\\bm 0} & {\\bm 0}\n' ...
	'\\end{bmatrix}\n' ...
	'\\]\n' ...
	];
	
if(verbose)
	s=[s ...
	'The mass matrix of the system is\n' ...
	tex_eqn('M',syst.eom.mass.mtx,'mass_matrix.out') ...
	'The damping matrix is\n' ...
	tex_eqn('L',syst.eom.elastic.dmpng_mtx + syst.eom.rigid.mv_mtx,'damping_matrix.out') ...
	'The stiffness matrix is\n' ...
	tex_eqn('K',syst.eom.eqn_of_mtn.stiff_mtx,'stiffness_matrix.out') ...
	'The velocity matrix is\n' ...
	tex_eqn('V',syst.eom.rigid.v_mtx,'velocity_matrix.out') ...
	];

	if(size(syst.eom.state_space.b,2)>0)
		s=[s 'The input force matrix is\n' tex_eqn('F',syst.eom.forced.f_mtx,'forcing_matrix.out')];
		s=[s 'The input force rate matrix is\n' tex_eqn('G',syst.eom.forced.g_mtx,'forcing_rate_matrix.out')];
	end

	if(size(syst.eom.rigid.J_r,1)>0)
		s=[s ...
		tex_eqn('J',syst.eom.rigid.J_r,'jacobian_matrix.out')];
	end

	disp('Equations of motion are finished.');
end

end %% Return


%	'The deflection stiffness matrix is' ...
%	tex_eqn('K',syst.eom.elastic.k_defln) ...

%	'The tangent stiffness matrix is' ...
%	tex_eqn('K',syst.eom.eqn_of_mtn.k_geo) ...

%	'The internal force stiffness matrix is' ...
%	tex_eqn('K',syst.eom.eqn_of_mtn.k_int_frc) ...

%'The forces $\\vec{f}$ consist of constant external applied forces, constraint forces (internal reactions at rigid connections), and preloads (internal reactions at flexible connections).  The Lagrange multipliers are used to determine the internal reactions, and from this, the tangent stiffness terms.\n' ...
%tex_eqn('\\lambda^T',syst.eom.preloads.lambda') ...

%  	'\\[\n\\begin{bmatrix} {\\mathbf I} & {\\bm 0} \\\\ {\\bm 0} & {\\mathbf M}\\end{bmatrix}\n' ...
%  	'\\begin{Bmatrix} \\dot{\\bm p}\\\\ \\dot{\\bm w}\\end{Bmatrix}\n' ...
%  	'+\\begin{bmatrix} {\\mathbf V} & -{\\mathbf I} \\\\ {\\mathbf K} & {\\mathbf C} \\end{bmatrix}\n' ...
%  	'\\begin{Bmatrix} {\\bm p}\\\\ {\\bm w}\\end{Bmatrix}\n' ...
%  	'=\\begin{bmatrix} {\\bm 0}\\\\ {\\mathbf F}\\end{bmatrix}\n' ...
%  	'\\begin{Bmatrix} {\\bm u}\\end{Bmatrix}\n' ...
%  	'+\\begin{bmatrix} {\\bm 0}\\\\ {\\mathbf G}\\end{bmatrix}\n' ...
%  	'\\begin{Bmatrix} \\dot{\\bm u}\\end{Bmatrix}\n\\]\n' ...
