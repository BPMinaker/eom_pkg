function s=tex_partn_eqn(sys,minflag)
%% Copyright (C) 2013, Bruce Minaker
%% This file is intended for use with Octave.
%% tex.m_partn_eqn is free software; you can redistribute it and/or modify it
%% under the terms of the GNU General Public License as published by
%% the Free Software Foundation; either version 2, or (at your option)
%% any later version.
%%
%% tex_partn_eqn.m is distributed in the hope that it will be useful, but
%% WITHOUT ANY WARRANTY; without even the implied warranty of
%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%% General Public License for more details at www.gnu.org/copyleft/gpl.html.
%%
%%--------------------------------------------------------------------


[m,n]=size([sys.a sys.b]);

t='\\begin{tiny}\n';
u='\\end{tiny}\n';
s='';

if(~minflag)
s=[s '\\[\n' ...
	'\\begin{bmatrix}\n' ...
	'{\\mathbf E} & {\\bm 0} \\\\ {\\bm 0} & {\\mathbf I}\n' ...
	'\\end{bmatrix}\n' ...
	'\\begin{Bmatrix}\n' ...
	'\\dot{\\bm x}\\\\ {\\bm y}\n' ...
	'\\end{Bmatrix}\n' ...
	'=\\begin{bmatrix}\n' ...
	'\\mathbf{A} & \\mathbf{B} \\\\ \\mathbf{C} & \\mathbf{D}\n' ...
	'\\end{bmatrix}\n' ...
	'\\begin{Bmatrix}\n' ...
	'{\\bm x}\\\\ {\\bm u}\\end{Bmatrix}\n' ...
	'\\]\n'];
else
	s=[s '\\[\n' ...
	'\\begin{Bmatrix}\n' ...
	'\\dot{\\bm x}\\\\ {\\bm y}\n' ...
	'\\end{Bmatrix}\n' ...
	'=\\begin{bmatrix}\n' ...
	'\\mathbf{A} & \\mathbf{B} \\\\ \\mathbf{C} & \\mathbf{D}\n' ...
	'\\end{bmatrix}\n' ...
	'\\begin{Bmatrix}\n' ...
	'{\\bm x}\\\\ {\\bm u}\\end{Bmatrix}\n' ...
	'\\]\n'];
end
	
s=[s '\\pgfplotstabletypeset[\n' ...
	'every head row/.style={output empty row},\n' ...
	'every last row/.style={after row={}},\n' ...
	'every row no ' num2str(m-1) '/.style={after row=\\midrule},\n'];
	for i=1:n
		s=[s 'columns/' num2str(i-1) '/.style={sci,sci zerofill,precision=8,dec sep align'];
		if(i==m)
			s=[s ',column type/.add={}{|}'];
		end
		s=[s '},\n'];
	end
s=[s 'write to macro=\\ABCD,\n' ...
	'typeset=false]\n' ...
	'{unformatted/ABCD'];
if(minflag)
	s=[s 'min'];
end
s=[s '.out}\n'];

if(~minflag)
	s=[s '\\pgfplotstabletypeset[\n' ...
	'every head row/.style={output empty row},\n' ...
	'every last row/.style={after row={}},\n'];
	for i=1:n
		s=[s 'columns/' num2str(i-1) '/.style={sci,sci zerofill,precision=8,dec sep align},\n'];
	end
	s=[s 'write to macro=\\E,\n' ...
	'typeset=false]\n' ...
	'{unformatted/E.out}\n'];
end

s=[s t '\\[\n' ...
 	'\\begin{bmatrix}\n' ...
  	'{\\mathbf A} & {\\mathbf B} \\\\ {\\mathbf C} & {\\mathbf D}\n' ...
  	'\\end{bmatrix}=\n' ...
	'\\left[\n' ...
	'\\ABCD\n' ...
	'\\right]\n' ...
	'\\]\n'];
	
if(~minflag)
	s=[s '\\[\n' ...
	'{\\mathbf E}=\n' ...
	'\\left[\n' ...
	'\\E\n' ...
	'\\right]\n' ...
	'\\]\n'];
end

s=[s u];

end  %% Leave


%shrink=0;
%rndf=1e5;
%a=round(sys.a*rndf)/rndf;
%b=round(sys.b*rndf)/rndf;
%c=round(sys.c*rndf)/rndf;
%d=round(sys.d*rndf)/rndf;
%e=round(sys.e*rndf)/rndf;


%  s=[s '\n' ...
%  	'\\[\n' ...
%  	'\\begin{bmatrix}\n' ...
%  	'{\\mathbf E} & {\\bm 0} \\\\ {\\bm 0} & {\\mathbf I}\n' ...
%  	'\\end{bmatrix}\n' ...
%  	'\\begin{Bmatrix}\n' ...
%  	'\\dot{\\bm x}\\\\ {\\bm y}\\end{Bmatrix}\n' ...
%  	'=\\begin{bmatrix}\n' ...
%  	'\\mathbf{A} & \\mathbf{B} \\\\ \\mathbf{C} & \\mathbf{D}\n' ...
%  	'\\end{bmatrix}\n' ...
%  	'\\begin{Bmatrix}\n' ...
%  	'{\\bm x}\\\\ {\\bm u}\\end{Bmatrix}\n' ...
%  	'\\]\n' ...
%  	t ...
%  	'\\pgfkeys{/pgf/number format/.cd,sci,sci zerofill,precision=4}\n' ...
%  	'\\[\n' ...
%  	'\\begin{bmatrix}\n' ...
%  	'{\\mathbf A} & {\\mathbf B} \\\\ {\\mathbf C} & {\\mathbf D}\n\\end{bmatrix} =\n' ...
%  	'\\left[\\begin{array}\n' ...
%  	'{@{}'];
%  
%  for i=1:size(a,2)
%  s=[s 'c'];
%  end
%  s=[s '|'];
%  for i=1:size(b,2)
%  s=[s 'c'];
%  end 
%  s=[s '@{}}\n'];
%  for i=1:size(a,1)
%  	for j=1:size(a,2)
%  		s=[s sprintf('\\\\pgfmathprintnumber{ %#5.5e }& ',a(i,j))];
%  	end
%  	for j=1:size(b,2)-1
%  		s=[s sprintf('\\\\pgfmathprintnumber{ %#5.5e }& ',b(i,j))];
%  	end
%  s=[s sprintf('\\\\pgfmathprintnumber{ %#5.5e }\\\\\\\\\n',b(i,end))];
%  end
%  s=[s '\\hline\n& \\\\[\\dimexpr-\\normalbaselineskip+2pt]\n'];
%  
%  for i=1:size(c,1)
%  for j=1:size(c,2)
%  		s=[s sprintf('\\\\pgfmathprintnumber{ %#5.5e }& ',c(i,j))];
%  	end
%  	for j=1:size(d,2)-1
%  		s=[s sprintf('\\\\pgfmathprintnumber{ %#5.5e }& ',d(i,j))];
%  	end
%  s=[s sprintf('\\\\pgfmathprintnumber{ %#5.5e }\\\\\\\\\n',d(i,end))];
%  end
%  
%  s=[s '\\end{array}\\right]\n'...
%  	'\\]\n' ...
%  	'\\[\n' ...
%  	'\\mathbf{E}=\n' ...
%  	'\\begin{bmatrix}\n'];
%  
%  for i=1:size(e,1)
%  	for j=1:size(e,2)-1
%  		s=[s sprintf('\\\\pgfmathprintnumber{ %#5.5e }& ',e(i,j))];
%  	end
%  	s=[s sprintf('\\\\pgfmathprintnumber{ %#5.5e }\\\\\\\\\n',e(i,end))];
%  end
%  s=[s '\\end{bmatrix}\n' ...
%  	'\\]\n' ...
%  	u ];

